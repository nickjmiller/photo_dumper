// Mocks generated by Mockito 5.4.6 from annotations
// in photo_dumper/test/unit/features/photo_comparison/presentation/bloc/photo_comparison_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:photo_dumper/core/error/failures.dart' as _i6;
import 'package:photo_dumper/features/photo_comparison/domain/entities/photo.dart'
    as _i7;
import 'package:photo_dumper/features/photo_comparison/domain/repositories/photo_repository.dart'
    as _i2;
import 'package:photo_dumper/features/photo_comparison/domain/usecases/photo_usecases.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePhotoRepository_0 extends _i1.SmartFake
    implements _i2.PhotoRepository {
  _FakePhotoRepository_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [PhotoUseCases].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhotoUseCases extends _i1.Mock implements _i4.PhotoUseCases {
  MockPhotoUseCases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PhotoRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakePhotoRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.PhotoRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.Photo>>> getPhotos() =>
      (super.noSuchMethod(
            Invocation.method(#getPhotos, []),
            returnValue:
                _i5.Future<_i3.Either<_i6.Failure, List<_i7.Photo>>>.value(
                  _FakeEither_1<_i6.Failure, List<_i7.Photo>>(
                    this,
                    Invocation.method(#getPhotos, []),
                  ),
                ),
          )
          as _i5.Future<_i3.Either<_i6.Failure, List<_i7.Photo>>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.Photo>>> getLibraryPhotos() =>
      (super.noSuchMethod(
            Invocation.method(#getLibraryPhotos, []),
            returnValue:
                _i5.Future<_i3.Either<_i6.Failure, List<_i7.Photo>>>.value(
                  _FakeEither_1<_i6.Failure, List<_i7.Photo>>(
                    this,
                    Invocation.method(#getLibraryPhotos, []),
                  ),
                ),
          )
          as _i5.Future<_i3.Either<_i6.Failure, List<_i7.Photo>>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.Photo>>> getSelectedPhotos() =>
      (super.noSuchMethod(
            Invocation.method(#getSelectedPhotos, []),
            returnValue:
                _i5.Future<_i3.Either<_i6.Failure, List<_i7.Photo>>>.value(
                  _FakeEither_1<_i6.Failure, List<_i7.Photo>>(
                    this,
                    Invocation.method(#getSelectedPhotos, []),
                  ),
                ),
          )
          as _i5.Future<_i3.Either<_i6.Failure, List<_i7.Photo>>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.Photo>> selectPhoto(String? photoId) =>
      (super.noSuchMethod(
            Invocation.method(#selectPhoto, [photoId]),
            returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.Photo>>.value(
              _FakeEither_1<_i6.Failure, _i7.Photo>(
                this,
                Invocation.method(#selectPhoto, [photoId]),
              ),
            ),
          )
          as _i5.Future<_i3.Either<_i6.Failure, _i7.Photo>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.Photo>> deselectPhoto(
    String? photoId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#deselectPhoto, [photoId]),
            returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.Photo>>.value(
              _FakeEither_1<_i6.Failure, _i7.Photo>(
                this,
                Invocation.method(#deselectPhoto, [photoId]),
              ),
            ),
          )
          as _i5.Future<_i3.Either<_i6.Failure, _i7.Photo>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.Photo>>> getRandomPair() =>
      (super.noSuchMethod(
            Invocation.method(#getRandomPair, []),
            returnValue:
                _i5.Future<_i3.Either<_i6.Failure, List<_i7.Photo>>>.value(
                  _FakeEither_1<_i6.Failure, List<_i7.Photo>>(
                    this,
                    Invocation.method(#getRandomPair, []),
                  ),
                ),
          )
          as _i5.Future<_i3.Either<_i6.Failure, List<_i7.Photo>>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> keepPhoto(String? photoId) =>
      (super.noSuchMethod(
            Invocation.method(#keepPhoto, [photoId]),
            returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
              _FakeEither_1<_i6.Failure, void>(
                this,
                Invocation.method(#keepPhoto, [photoId]),
              ),
            ),
          )
          as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> deletePhoto(String? photoId) =>
      (super.noSuchMethod(
            Invocation.method(#deletePhoto, [photoId]),
            returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
              _FakeEither_1<_i6.Failure, void>(
                this,
                Invocation.method(#deletePhoto, [photoId]),
              ),
            ),
          )
          as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> keepBothPhotos() =>
      (super.noSuchMethod(
            Invocation.method(#keepBothPhotos, []),
            returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
              _FakeEither_1<_i6.Failure, void>(
                this,
                Invocation.method(#keepBothPhotos, []),
              ),
            ),
          )
          as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> deleteBothPhotos() =>
      (super.noSuchMethod(
            Invocation.method(#deleteBothPhotos, []),
            returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
              _FakeEither_1<_i6.Failure, void>(
                this,
                Invocation.method(#deleteBothPhotos, []),
              ),
            ),
          )
          as _i5.Future<_i3.Either<_i6.Failure, void>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, int>> getSelectedPhotoCount() =>
      (super.noSuchMethod(
            Invocation.method(#getSelectedPhotoCount, []),
            returnValue: _i5.Future<_i3.Either<_i6.Failure, int>>.value(
              _FakeEither_1<_i6.Failure, int>(
                this,
                Invocation.method(#getSelectedPhotoCount, []),
              ),
            ),
          )
          as _i5.Future<_i3.Either<_i6.Failure, int>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, int>> getRemainingPhotoCount() =>
      (super.noSuchMethod(
            Invocation.method(#getRemainingPhotoCount, []),
            returnValue: _i5.Future<_i3.Either<_i6.Failure, int>>.value(
              _FakeEither_1<_i6.Failure, int>(
                this,
                Invocation.method(#getRemainingPhotoCount, []),
              ),
            ),
          )
          as _i5.Future<_i3.Either<_i6.Failure, int>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> clearAllSelections() =>
      (super.noSuchMethod(
            Invocation.method(#clearAllSelections, []),
            returnValue: _i5.Future<_i3.Either<_i6.Failure, void>>.value(
              _FakeEither_1<_i6.Failure, void>(
                this,
                Invocation.method(#clearAllSelections, []),
              ),
            ),
          )
          as _i5.Future<_i3.Either<_i6.Failure, void>>);
}
